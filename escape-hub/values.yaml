proxy:
  secretToken: "<YOUR_SECRET_TOKEN>"
  service:
    type: NodePort
    nodePorts:
      http: <YOUR_PORT>

hub:
  baseUrl: /escape/
  extraEnv:
    OAUTH2_AUTHORIZE_URL: https://iam-escape.cloud.cnaf.infn.it/authorize
    OAUTH2_TOKEN_URL: https://iam-escape.cloud.cnaf.infn.it/token
    OAUTH_CALLBACK_URL: https://spsrc-jupyter.iaa.csic.es/escape/hub/oauth_callback
  config:
    GenericOAuthenticator:
      client_id: '<YOUR_CLIENT_ID>'
      client_secret: '<YOUR_CLIENT_SECRET>'
      login_service: 'ESCAPE IAM'
      oauth_callback_url: https://spsrc-jupyter.iaa.csic.es/escape/hub/oauth_callback
      token_url: https://iam-escape.cloud.cnaf.infn.it/token
      userdata_method: GET
      userdata_params: {'state': 'state'}
      userdata_url: https://iam-escape.cloud.cnaf.infn.it/userinfo
      username_key: preferred_username
    JupyterHub:
      authenticator_class: oauthenticator.generic.GenericOAuthenticator
  extraConfig:
    logoConfig: |
      import urllib.request
      urllib.request.urlretrieve("https://drive.google.com/uc?export=download&id=1DH8vbKpTcueOl_druObkmFQSOJlo-8Zd", "iaalogo.png")
      c.JupyterHub.logo_file = '/srv/jupyterhub/iaalogo.png'

singleuser:
  defaultUrl: "/lab"
  image:
    name: jupyter/minimal-notebook
    tag: latest
    pullPolicy: IfNotPresent
  profileList:
     - display_name: "Minimal environment"
       description: "To avoid too much bells and whistles: Python."
       default: true
     - display_name: "Datascience environment"
       description: "If you want the additional bells and whistles: Python, R, and Julia."
       kubespawner_override:
         image: jupyter/datascience-notebook:latest
     - display_name: "Spark environment"
       description: "The Jupyter Stacks spark image!"
       kubespawner_override:
         image: jupyter/all-spark-notebook:latest
